#####
# Developed by Luiz Felipe <felipe.silva337@yahoo.com>
# Date: 2020-05-26
# GitHub: https://github.com/Silva97
# Distributed under the MIT License.
#
# This module creates procedures to do input and output.
#####

[require "$/lia", "$/var"]

## Prints a number in output ##
proc putn
  alloc 32
  setvar 0, 0
  addr rd, 1

  # Verify negative number
  set rb, 0
  dec rb
  idiv rb, 2
  dec rb

  grt rc, rb
  ifz
    iout '-'
    set rb, 0
    sub rb, rc
    mov rc, rb
  endif

  do
    set rf, 0
    set re, 10
    grt re, rc
    ifnz
      idiv rc, 10
      mov rf, ra
      iadd rf, '0'
      movaddr rd, rf
      dec rd
    endif

    iequ rf, 0
  whilenz

  iadd rc, '0'
  movaddr rd, rc
  puts rd

  free 32
endproc

## Gets an string and converts to number ##
proc readn
  alloc 33
  addr rc, 31
  readline rc, 32

  set rg, '+'
  getaddr re, rc
  iequ re, '-'
  ifz
    set rg, '-'
    inc rc
  endif

  iequ re, '+'
  ifz inc rc

  set rd, 0
  do
    getaddr re, rc    
    set ri, 0
    mov rf, re
    isub rf, '0'
    igrt rf, 9

    ifnz
      imul rd, 10

      isub re, '0'
      iequ rg, '-'
      ifz
        set rf, 0
        sub rf, re
        mov re, rf
      endif
      add rd, re

      inc rc
      getaddr ri, rc
    endif

    iequ ri, 0
  whilenz

  free 33
  ret rd
endproc