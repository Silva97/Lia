#####
# Developed by Luiz Felipe <felipe.silva337@yahoo.com>
# Date: 2020-05-05
# GitHub: https://github.com/Silva97
# Distributed under the MIT License.
#
# This module declares commands to create stack frame and use
# variables in it.
#####

[require "$/lia"]

##
# Allocate X spaces to use at variables
# This use K register to preserve the start address of the stack frame.
##
[new alloc x:i = "K!> PaX4Ap k"]

## Free X spaces reserved by alloc ##
[new free x:i = "KaX5Ap <=k"]

## Gets the value of a variable in the stack frame ##
[new getvar  x:r v:i = "Pb KaV5A-p =x Bp"]

## Sets the value of a variable ##
[new movvar v:i x:r = "Pb KaV5A-p X! Bp"]
[new setvar v:i x:i = "Pb KaV5A-p X! Bp"]

## Prints the value of a variable ##
[new outvar v:i = "Pb KaV5A-p =1 Bp"]

## Gets the input and set the variable ##
[new invar v:i = "Pb KaV5A-p 0! Bp"]

## Gets the variable address ##
[new addr x:r v:i = "Pb KaV5A- x Bp"]

## Gets the value in the address ##
[new getaddr x:r v:r = "Pb Vp=x Bp"]

## Sets the value in the address ##
[new movaddr v:r x:r = "Pb VpX! Bp"]
[new setaddr v:r x:i = "Pb VpX! Bp"]

## Gets the input of a string
# op1 = address
# op2 = Maximum size
#
# Returns in ra the size of the string.
# The strings have null terminator.
##
[new readline x:r s:i =
  "Pa Xp Sb$ 0+?(-7?(6!> B-b~* .!@@Ap SaB5"
]

## Prints an string ##
[new puts s:r = "PaSp $ =?(1>*@ Ap"]